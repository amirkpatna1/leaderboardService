spring:
  datasource:
    url: ${mysqlDbUrl}
    username: ${mysqlUserName}
    password: ${mysqlPassword}
    driver-class-name: com.mysql.cj.jdbc.Driver

  redis:
    host: ${redisHost}
    port: ${redisPort}


  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  sql:
    init:
      mode: never
  kafka:
    bootstrap-servers: ${kafkaServers}
    port: ${kafkaPort}
    advertised.host.name: localhost
    consumer:
      group-id: leaderboard-scores
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: "*"

server:
  servlet:
    context-path: /my-leaderboard
  port: 8081

kafka:
  score-topic: ${scoreTopic}

auth:
  secret-key: ${secretKey}

strategy:
  tie-break-strategy: defaultTieBreakStrategy
  ranking-strategy: combinedRankingStrategy